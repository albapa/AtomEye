include Makefile.config

ifeq (${HAVE_QUIP},1)
  # Override with settings from QUIP Makefiles
  include Makefile.inc
  include Makefile.rules
  include Makefile.${QUIP_ARCH}

  CFLAGS += -fPIC -DHAVE_LIBATOMS
  FC = ${F77}
  LD = ${LINKER}
  SYSLIBS += ${QUIP_ROOT}/build.${QUIP_ARCH}/libatoms.a -L${QUIP_ROOT}/build.${QUIP_ARCH}
else
  SVN_VERSION := -D'SVN_VERSION="$(shell svnversion -n ..)"'
  CFLAGS += ${SVN_VERSION}
endif

export CFLAGS
export CC
export FC
export LD

#ATOMEYE_LIBS = -static -lm -lXpm -lXext -lX11 -lmpi -lpng -lz -ljpeg -lhistory -lncurses -lreadline -lcurl ${SYSLIBS}

ATOMEYE_LIBS = -lm /opt/local/lib/libXpm.a /opt/local/lib/libXext.a /opt/local/lib/libX11.a /opt/local/lib/libxcb.a /opt/local/lib/libXau.a /opt/local/lib/libXdmcp.a /opt/local/lib/libpng.a /opt/local/lib/libz.a /opt/local/lib/libjpeg.a /opt/local/lib/libhistory.a /opt/local/lib/libncurses.a /opt/local/lib/libreadline.a /opt/local/lib/libcurl.a /opt/local/lib/libnetcdf.a /opt/local/lib/libhdf5.a /opt/local/lib/libhdf5_hl.a -framework Accelerate /opt/local/lib/libjpeg.a /opt/local/lib/libz.a /opt/local/lib/libsz.a /opt/local/lib/libcurl.a ${QUIP_ROOT}/build.${QUIP_ARCH}/libatoms.a /opt/local/lib/libidn.a /opt/local/lib/libssl.a /opt/local/lib/libiconv.a /opt/local/lib/libcrypto.a /opt/local/lib/libintl.a -framework CoreFoundation -static-libgfortran -static-libgcc 

export ATOMEYE_LIBS

SUBDIRS = Timer IO Scalar VecMat Min VecMat3 Atoms AX

ALLSUBDIRS = ${SUBDIRS} A3

.PHONY: all clean subdirs cleansubdirs atomeyelib

subdirs:
	for dir in ${SUBDIRS}; do \
	  cp $$dir/*.h include; \
	  $(MAKE) -C $$dir || exit 1; \
	done
	$(MAKE) -C A3 i || exit 1

cleansubdirs:
	for dir in ${ALLSUBDIRS}; do \
	  $(MAKE) -C $$dir clean; \
	done

all: subdirs

atomeyelib:
	for dir in ${SUBDIRS}; do \
	  cp $$dir/*.h include; \
	  $(MAKE) -C $$dir ATOMEYE_LIB=-DATOMEYE_LIB || exit 1; \
	done
	$(MAKE) -C A3 ATOMEYE_LIB=-DATOMEYE_LIB atomeyelib || exit 1

clean: cleansubdirs
	-rm -rf AtomEye.app

AtomEye.app: all
	cp -r AtomEye.app.template AtomEye.app
	cp bin/A AtomEye.app/Contents/MacOS/A

install: all
	cp bin/A ${HOME}/bin
	[[ -d AtomEye.app ]] && cp -r AtomEye.app /Applications
